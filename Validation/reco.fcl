#
# run tracker and cal reco from a file of digis
#
#include "Offline/Mu2eKinKal/fcl/prolog.fcl"
#include "Production/JobConfig/reco/Reco.fcl"
# add KinKal fits
#
physics.producers : @local::Reconstruction.producers
physics.filters : @local::Reconstruction.filters
#
# only run DeM and DeP
#
physics.RecoPath : [
  @sequence::Reconstruction.CaloReco,
  @sequence::Reconstruction.TrkReco,
  @sequence::Reconstruction.CrvReco,
  @sequence::Reconstruction.DeReco,
  @sequence::Reconstruction.MCReco,
  RecoFilter
]
physics.producers.SelectRecoMC.KalSeedCollections : [ "KKDeM", "KKDeP"]
physics.producers.SelectRecoMC.HelixSeedCollections  : ["MHDeM", "MHDeP" ]
physics.producers.CrvRecoPulses.oldDigis : true
physics.filters.RecoFilter.TrkTags : [ "KKDeM", "KKDeP"]
physics.filters.RecoFilter.MomentumCutoff : [ 60.0, 60.0 ]

#include "Production/JobConfig/reco/epilog.fcl"
#include "Production/JobConfig/reco/drop_trigger.fcl"
outputs: {
  Output: {
    SelectEvents: [
      "RecoPath"
    ]
    fileName: "mcs.owner.val-reco.dsconf.seq.art"
    module_type: "RootOutput"
    outputCommands: [
      "drop *_*_*_*",
      "keep mu2e::TriggerInfo_*_*_*",
      "keep art::TriggerResults_*_*_*",
      "keep mu2e::KalSeeds_KK*_*_*",
      "keep mu2e::HelixSeeds_MH*_*_*",
      "keep mu2e::TimeClusters_MH*_*_*",
      "keep mu2e::CaloClusters_CaloClusterMaker_*_*",
      "keep mu2e::EventWindowMarker_*_*_*",
      "keep mu2e::ProtonBunchTime_*_*_*",
      "keep *_SelectRecoMC_*_*",
      "keep *_genCounter_*_*",
      "keep mu2e::PrimaryParticle_*_*_*",
      "keep mu2e::StatusG4_*_*_*",
      "keep mu2e::ProtonBunchIntensity_*_*_*",
      "keep mu2e::ProtonBunchTimeMC_*_*_*",
      "keep mu2e::EventWeight_*_*_*",
      "keep *_compressRecoMCs_*_*",
      "drop *_*UeM_*_*",
      "drop *_*UeP_*_*",
      "drop *_*DmuP_*_*",
      "drop *_*DmuM_*_*",
      "drop *_*UmuP_*_*",
      "drop *_*UmuM_*_*"
    ]
  }
}

# print summaries
services.scheduler.wantSummary: true
services.TimeTracker.printSummary: true

# histogram file
services.TFileService.fileName : "nts.owner.val-reco.dsconf.seq.root"
# art file
outputs.Output.fileName : "mcs.owner.val-reco.dsconf.seq.art"

# use the default standard geometry
services.GeometryService.inputFile : "Production/JobConfig/common/geom_baseline.txt"
#include "Production/Validation/database.fcl"
