#
# Prolog for digitizing detector steps
#
#include "Production/JobConfig/primary/prolog.fcl"
#include "Offline/fcl/TrkCaloDt.fcl"
#include "Offline/fcl/standardServices.fcl"
#include "Offline/TrackerMC/fcl/prolog.fcl"
#include "Offline/CaloMC/fcl/prolog.fcl"
#include "Offline/CRVResponse/fcl/prolog.fcl"
#include "Offline/Filters/fcl/prolog.fcl"
#include "Offline/Compression/fcl/prolog.fcl"
#include "Offline/CommonMC/fcl/prolog.fcl"
#include "mu2e-trig-config/core/trigProducers.fcl"
#include "mu2e-trig-config/core/trigFilters.fcl"
#include "mu2e-trig-config/core/trigRecoSequences.fcl"
BEGIN_PROLOG

Digitize: {
  producers : {
    @table::CommonMC.DigiProducers
    @table::TrackerMC.DigiProducers
    @table::CaloMC.producers
    @table::CrvDAQPackage.producers
    @table::TrigProducers.producers
    compressDigiMCs : {
      module_type : CompressDigiMCs
      strawDigiMCTag : @local::DigiCompressionTags.commonStrawDigiMCTag
      crvDigiMCTag : @local::DigiCompressionTags.commonCrvDigiMCTag
      caloShowerSimTag : @local::DigiCompressionTags.commonCaloShowerSimTag
      caloShowerROTag : @local::DigiCompressionTags.commonCaloShowerROTag
      simParticleTags : ["compressDetStepMCs"]
      caloShowerStepTags : ["compressDetStepMCs"]
      extraStepPointMCTags : ["compressDetStepMCs:virtualdetector"]
      mcTrajectoryTag : "compressDetStepMCs"
      surfaceStepTags : [ "compressDetStepMCs" ]
      primaryParticleTag : "FindMCPrimary"
      keepAllGenParticles : true
      rekeySimParticleCollection : true
      noCompression : false

      # Unused options
      strawDigiMCIndexMapTag : ""
      crvDigiMCIndexMapTag : ""
      caloClusterMCTag : ""
      crvCoincClusterMCTags : [  ]
      crvStepsToKeep : [ ]
    }
    PBISim : {
      module_type: ProtonBunchIntensityFlat
      mean : 1
      halfWidth : 0
    }
    MakeSS : { module_type : NullProducer } # temporary patch for older MDC2020 output
# Trigger MC matching instances for each helix algorithm
    TTAprKSFMC : {
      @table::CommonMC.TTSelectRecoMC
      KalSeedCollections  : [ "TTAprKSF" ]
    }
    TTTprDeKSFMC : {
      @table::CommonMC.TTSelectRecoMC
      KalSeedCollections  : [ "TTKSFDe" ]
    }
    TTMprDeKSFMC : {
      @table::CommonMC.TTSelectRecoMC
      KalSeedCollections  : [ "TTKSFMprDe" ]
    }
    TTCprDeKSFMC : {
      @table::CommonMC.TTSelectRecoMC
      KalSeedCollections  : [ "TTCalSeedFitDe" ]
    }
  }
  filters : {
# filter for Triggerable stream.  These should be events that might have
# triggered.  The default setting is a particle with enough tracker digis
    # in the right momentum range to be reconstructable as a helix
    # This filter should be overriden as needed for other kinds of primaries (straight cosmics, calo signals, ...)
    TriggerableLH : {
      module_type : StrawDigiMCFilter
      MinNDigis : 15
      MinParticleMom : 75.0
      MaxParticleMom : 300.0 # nominally particles that can form Loophelices in the tracker
      StrawDigiMCCollection : compressDigiMCs
      particleTypes : [ 11,-11, 13, -13, 211, -211] # e+-, mu+-, pi+-
    }
    # Triggerable stream prescaler; stream-dependent
    TriggerableLHPrescale : {
      module_type : Prescaler
      prescaleFactor : 1 # by default, don't prescale
      prescaleOffset : 0
    }
     TriggerableCH : {
      module_type : StrawDigiMCFilter
      MinNDigis : 15
      MinParticleMom : 500.0
      MaxParticleMom : 1e10
      StrawDigiMCCollection : compressDigiMCs
      particleTypes : [ 11,-11, 13, -13, 211, -211] # e+-, mu+-, pi+-
    }
    TriggerableCHPrescale : {
      module_type : Prescaler
      prescaleFactor : 100
      prescaleOffset : 0
    }
    TriggerableTwoTrack : {
      module_type : StrawDigiMCFilter
      MinNParticles : 2
      MinNDigis : 15
      MinParticleMom : 30.0
      MaxParticleMom : 300.0 # nominally particles that can form Loophelices in the tracker
      StrawDigiMCCollection : compressDigiMCs
      particleTypes : [ 11,-11, 13, -13, 211, -211] # e+-, mu+-, pi+-
    }
    # Triggerable stream prescaler; stream-dependent
    TriggerableTwoTrackPrescale : {
      module_type : Prescaler
      prescaleFactor : 1 # by default, prescale all events (n % 1 != 1 for all n)
      prescaleOffset : 1
    }
    @table::TrigFilters.filters
  }

  analyzers: {
    digiCompressionCheck : @local::DigiCompression.Check
  }

  DigitizeSequence : [
    PBISim,
    MakeSS,
    @sequence::CommonMC.DigiSim,
    @sequence::TrackerMC.DigiSim,
    @sequence::CaloMC.DigiSim,
    @sequence::CrvDAQPackage.CrvDAQSequence,
    compressDigiMCs ]

  TriggerableLHSequence : [ TriggerableLHPrescale, TriggerableLH ]
  TriggerableCHSequence : [ TriggerableCHPrescale, TriggerableCH ]
  TriggerableTwoTrackSequence : [ TriggerableTwoTrackPrescale, TriggerableTwoTrack ]

  TriggerProducts : [
    "keep art::TriggerResults_*_*_*",
    "keep mu2e::CaloClusters_*_*_*",
    "keep mu2e::TriggerInfo_*_*_*",
    "keep mu2e::KalSeeds_TT*_*_*",
    "keep mu2e::KalSeedMCs_TT*KSFMC_*_*",
    "keep mu2e::KalSeedmu2e::KalSeedMCvoidart::Assns_TT*KSFMC_*_*",
    "keep mu2e::RecoCount_TT*KSFMC_*_*"
  ]
    #    "keep mu2e::SimParticlemv_compressDetStepMCs_*_*",
    #"keep mu2e::GenParticles_compressDetStepMCs_*_*"

  GeneralProducts : [
    "keep mu2e::EventWindowMarker_*_*_*",
    "keep mu2e::ProtonBunchTime_*_*_*"
  ]
  DigiProducts : [
    "keep mu2e::StrawDigis_makeSD_*_*",
    "keep mu2e::StrawDigiADCWaveforms_makeSD_*_*",
    "keep mu2e::CaloDigis_*_*_*",
    "keep mu2e::CrvDigis_*_*_*"
  ]
  MCDigiProducts : [
    "keep *_compressDigiMCs_*_*"
  ]
  GeneralMCProducts : [
    "keep mu2e::ProtonBunchIntensity*_*_*_*",
    "keep mu2e::ProtonBunchTimeMC_*_*_*",
    @sequence::Primary.GeneralProducts
  ]

  #
  # Output Stream for events passing relevant triggers
  #
  TriggeredOutput : {
    module_type : RootOutput
    fileName    : "dig.owner.Triggered.version.sequencer.art"
  }
  #
  # Output stream for MC-truth selected events
  #
  TriggerableOutput : {
    module_type : RootOutput
    fileName    : "dig.owner.Triggerable.version.sequencer.art"
  }
  #
  # trigger selections that can be used to finalize the triggerOutput selection, depending on digitization mode and source
  #
  SignalTriggers : [ "cpr*_highP*", "apr_highP*" ]  # active trigger lines selecting events with 'high' momentum tracks with KinKal fits
  TrkTriggers : [ "*_lowP_*","*_ipa_*", "cst*" ] # events useful only for tracker calibration
  CaloTriggers : [ "calo*" ] # events useful only for calo calibration
  DiagTriggers : [ "minBias_*" , "*Helix*M", "*Helix*P"] # events useful for trigger diagnostics

  EndSequence : [digiCompressionCheck]
}

Digitize.TriggeredOutput.outputCommands : [ "drop *_*_*_*",
  @sequence::Digitize.GeneralProducts,
  @sequence::Digitize.GeneralMCProducts,
  @sequence::Digitize.DigiProducts,
  @sequence::Digitize.TriggerProducts,
  @sequence::Digitize.MCDigiProducts
]

Digitize.TriggerableOutput.outputCommands : [ "drop *_*_*_*",
  @sequence::Digitize.GeneralProducts,
  @sequence::Digitize.GeneralMCProducts,
  @sequence::Digitize.DigiProducts,
  @sequence::Digitize.TriggerProducts,
  @sequence::Digitize.MCDigiProducts
]

Digitize.Outputs : {
  TriggeredOutput : @local::Digitize.TriggeredOutput
  TriggerableOutput : @local::Digitize.TriggerableOutput
}
Digitize.EndPath : [ @sequence::Digitize.EndSequence, TriggeredOutput, TriggerableOutput ]
# override the trigger digitization sequence
TrigRecoSequences.cfoDataGen : [ @sequence::Digitize.DigitizeSequence, processCFOData ]
END_PROLOG
# Trigger Sequences have to come after
#include "mu2e-trig-config/core/trigSequences.fcl"
